services:
  lrossi-ma-thesis-db:
    image: postgres:16.9
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db
    volumes:
      - lrossi-ma-thesis-db:/var/lib/postgresql/data
    # Port mapping is only for dev mode, in production this would not need to be exposed
    ports:
      - '6543:5432'
    networks:
      - lrossi-ma-thesis

  lrossi-ma-thesis-swi-prolog:
    build:
      context: ../prolog
      dockerfile: Dockerfile
    restart: always
    # Port mapping is only for dev mode, in production this would not need to be exposed
    ports:
      - '6544:8080'
    networks:
      - lrossi-ma-thesis

  lrossi-ma-thesis-backend:
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@lrossi-ma-thesis-db:5432/db
      - SWI_PROLOG_URL=http://lrossi-ma-thesis-swi-prolog.service:8080
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_PROJECT_ID=${GOOGLE_PROJECT_ID}
    ports:
      - '5000:5000'
    build:
      context: ../backend
      dockerfile: Dockerfile
    networks:
      - lrossi-ma-thesis
    restart:
      always
    depends_on:
      - lrossi-ma-thesis-db

  lrossi-ma-thesis-frontend:
    ports:
      - '3000:3000'
    build:
      # The build needs access to the backend service
      context: ../
      dockerfile: ./frontend/Dockerfile
      args:
        - NEXT_PUBLIC_BACKEND_URL=http://localhost:5000
    networks:
      - lrossi-ma-thesis
    restart:
      always

volumes:
  lrossi-ma-thesis-db:
    driver: local

networks:
  lrossi-ma-thesis:
    driver: bridge
