from abc import ABC, abstractmethod

from backend.modules.chat.application.dto.chat_agent_message_egress_dto import ChatAgentMessageEgressDTO
from backend.modules.chat.application.dto.chat_agent_message_ingress_dto import ChatAgentMessageIngressDTO


class IChatAgent(ABC):

    @abstractmethod
    def send_message(self, message: ChatAgentMessageIngressDTO) -> ChatAgentMessageEgressDTO:
        """
        Process a message and return a response.
        No I do not care for streaming messages, this is a prototype.

        :param message: The input message to process.
        :return: The response generated by the chat agent.
        """
        raise NotImplementedError("This method should be overridden by subclasses.")
